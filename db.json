{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":0,"renderable":0},{"_id":"source/img/timg.png","path":"img/timg.png","modified":0,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/topbg.jpg","path":"img/header_img/topbg.jpg","modified":0,"renderable":0},{"_id":"source/img/signature/sing-zxm.png","path":"img/signature/sing-zxm.png","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.css","path":"css/beantech.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.min.css","path":"css/beantech.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/rocket.styl","path":"css/rocket.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/signature.styl","path":"css/signature.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/toc.styl","path":"css/toc.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/widget.styl","path":"css/widget.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"source/img/header_img/Iron-Man-3.jpg","path":"img/header_img/Iron-Man-3.jpg","modified":0,"renderable":0},{"_id":"source/img/ironman-draw.png","path":"img/ironman-draw.png","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":0,"renderable":0},{"_id":"themes/beantech/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman.png","path":"css/images/ironman.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket.png","path":"css/images/rocket.png","modified":0,"renderable":1},{"_id":"source/img/header_img/tf-logo-dark.png","path":"img/header_img/tf-logo-dark.png","modified":0,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":0,"renderable":0},{"_id":"themes/beantech/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"source/img/beantech-desktop.png","path":"img/beantech-desktop.png","modified":0,"renderable":0},{"_id":"source/img/header_img/tag-bg.png","path":"img/header_img/tag-bg.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-2-dark.png","path":"img/header_img/home-bg-2-dark.png","modified":0,"renderable":0},{"_id":"source/img/header_img/archive-bg.png","path":"img/header_img/archive-bg.png","modified":0,"renderable":0},{"_id":"source/img/header_img/main-video.mp4","path":"img/header_img/main-video.mp4","modified":0,"renderable":0}],"Cache":[{"_id":"source/.DS_Store","hash":"66da2ceba7f070f0a4ea722574a48b0a36d2a15d","modified":1544781913110},{"_id":"source/404.md","hash":"83c2c6d587beaa967a976e5969d60fa97fcdbe55","modified":1535613639000},{"_id":"source/CNAME","hash":"5ad9f6992b42487900b7398afe6065f0f62aeceb","modified":1545967603237},{"_id":"themes/beantech/LICENSE","hash":"2b209f06bebeb2a8c2b7e187e436f3e1e1fbc8a7","modified":1535613639000},{"_id":"themes/beantech/_config.yml","hash":"6afd65c055d9b1c70ae67323cc869f1b4aa60348","modified":1535614089000},{"_id":"source/_posts/React.md","hash":"357acec1cf95297cf6d35fefbc4afb7a8c7858e3","modified":1546062869035},{"_id":"source/_posts/first-blog.md","hash":"d325aa19bfd81bc74524a2845eaf6dba79ef6dae","modified":1545963027133},{"_id":"source/_posts/testReact.md","hash":"a084fb25f8c3007af036a1a6fb2de2538ad9c785","modified":1546063260836},{"_id":"source/archive/index.md","hash":"279ff19668395f5c6b26417da99d2c1f3ecd5886","modified":1535613639000},{"_id":"source/about/index.md","hash":"95ae0ca5ca53348b46b9167308a3b49bf5b9902f","modified":1544779683619},{"_id":"source/img/.DS_Store","hash":"43e09bcb3b5f68f325728d1908a3f4df6797ee27","modified":1544781938442},{"_id":"source/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1535613639000},{"_id":"source/tags/index.md","hash":"9d558ce28d0d44c3463517088689bbca44bbb364","modified":1535613639000},{"_id":"source/img/timg.png","hash":"b6e6f2d2cef30a3e23dac0047b50ec8332f86eb2","modified":1535627583000},{"_id":"themes/beantech/languages_to_be_added/de.yml","hash":"424a9c1e6ab69334d7873f6574da02ca960aa572","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/default.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/es.yml","hash":"cb4eeca0ed3768a77e0cd216300f2b2549628b1b","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/en.yml","hash":"97326c9e6518d9f379778178b3b8f9a58434725d","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/no.yml","hash":"8ca475a3b4f8efe6603030f0013aae39668230e1","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/pl.yml","hash":"de7eb5850ae65ba7638e907c805fea90617a988c","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/ru.yml","hash":"42df7afeb7a35dc46d272b7f4fb880a9d9ebcaa5","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/zh-TW.yml","hash":"9acac6cc4f8002c3fa53ff69fb8cf66c915bd016","modified":1535613639000},{"_id":"themes/beantech/layout/404.ejs","hash":"a4d73541a53e56b7dd46249c6d27cb59f4d97422","modified":1535613639000},{"_id":"themes/beantech/languages_to_be_added/zh-CN.yml","hash":"7bfcb0b8e97d7e5edcfca8ab26d55d9da2573c1c","modified":1535613639000},{"_id":"themes/beantech/layout/about.ejs","hash":"edcf8fa3bf7093c974d418ffef42ac89c19af128","modified":1535613639000},{"_id":"themes/beantech/layout/archive.ejs","hash":"72a150c8dff0031a9107d12eaa7c2e6c6ce950d2","modified":1535613639000},{"_id":"themes/beantech/layout/index.ejs","hash":"dc8a6eaa00d1e7c33a40979afe0953ed5d7b512e","modified":1535613639000},{"_id":"themes/beantech/layout/keynote.ejs","hash":"f5689862281e34dbe8402b0e72f632902e53e88b","modified":1535613639000},{"_id":"themes/beantech/layout/page.ejs","hash":"c90797e4394c5cb63c2515109480e766d04e486e","modified":1535613639000},{"_id":"themes/beantech/layout/layout.ejs","hash":"6efee96baaeb079b0abb2642c8d64edf01946a2e","modified":1544780615457},{"_id":"themes/beantech/layout/tags.ejs","hash":"2c72eb2e89130658aa068d80d27b561b509c5dcd","modified":1535613639000},{"_id":"themes/beantech/layout/post.ejs","hash":"2d55684fc539dc281f9e2ec0409f09ea6ca43949","modified":1545967596840},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1535613639000},{"_id":"source/img/header_img/.DS_Store","hash":"f3830d3fb8377daf4ae2676717d8841da96c708d","modified":1544781932342},{"_id":"source/img/header_img/topbg.jpg","hash":"1202404244a65a3666c27dd564f715744c3b557b","modified":1535357068000},{"_id":"source/img/signature/sing-zxm.png","hash":"95342d85a675d957652df6dc58188fbc570a47fb","modified":1544780331979},{"_id":"themes/beantech/layout/_partial/footer.ejs","hash":"8c9a3faf215019be61dfaed7597f5287f5423b65","modified":1535616229000},{"_id":"themes/beantech/layout/_partial/head.ejs","hash":"cf64ad851dd34f9cdc5115738b04da682a7315ec","modified":1535681036000},{"_id":"themes/beantech/layout/_partial/header.ejs","hash":"9db05bc046a6cd5a7f9aa6b79b6033966e6e19da","modified":1544782217389},{"_id":"themes/beantech/layout/_partial/nav.ejs","hash":"4c905166c960852e9b9a3c9d5c680091e37b481f","modified":1535613639000},{"_id":"themes/beantech/layout/_partial/pagination.ejs","hash":"557d6bb069a1d48af49ae912994653f44b32a570","modified":1535613639000},{"_id":"themes/beantech/layout/_partial/toc.ejs","hash":"837f01e8a20e5023b4b292d1b3141a399567da65","modified":1535613639000},{"_id":"themes/beantech/layout/_partial/sidebar.ejs","hash":"2e4e528a555917b2a267da4db2440bcc4a7a65ab","modified":1535613639000},{"_id":"themes/beantech/layout/_widget/archive.ejs","hash":"7594929d472806ca4c64d9906d9903a96de111a0","modified":1535613639000},{"_id":"themes/beantech/layout/_widget/category.ejs","hash":"1cf485def07dc06e870dc9613767c6c614bcf428","modified":1535613639000},{"_id":"themes/beantech/layout/_widget/featured-tags.ejs","hash":"0c9ce1942f1943dc8891a9302a922ef1ffe300c5","modified":1535613639000},{"_id":"themes/beantech/layout/_widget/friends-blog.ejs","hash":"734d3775017aedac185028924baf890a71a74548","modified":1535613639000},{"_id":"themes/beantech/layout/_widget/recent-posts.ejs","hash":"e08ab8ba60e31638006acf27f066b989a0a3c433","modified":1535613639000},{"_id":"themes/beantech/layout/_widget/short-about.ejs","hash":"3b10bd768f6ef30a42b1703fbc9a88627f9bfdf1","modified":1535613639000},{"_id":"themes/beantech/source/css/archive.styl","hash":"715bcbd085eb95ec26c9805c11c374919cde971c","modified":1535613639000},{"_id":"themes/beantech/source/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1535613639000},{"_id":"themes/beantech/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1535613639000},{"_id":"themes/beantech/source/css/highlight.styl","hash":"e842080e6d580f0f70a7df71fbde3c4e49463c19","modified":1535613639000},{"_id":"themes/beantech/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1535613639000},{"_id":"themes/beantech/source/css/rocket.styl","hash":"e15c51c8566ecd943112e57592888dd318b6fa6a","modified":1535613639000},{"_id":"themes/beantech/source/css/signature.styl","hash":"88159b31c59d59c01a0b534af57242662a2a3969","modified":1535613639000},{"_id":"themes/beantech/source/css/toc.styl","hash":"6c9a2d5f6f981624e0c4b64323493e8614efea29","modified":1535613639000},{"_id":"themes/beantech/source/css/widget.styl","hash":"7a9f735f5ef323dc2950fbd9d76daa16c9a0f1a9","modified":1535613639000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1535613639000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1535613639000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1535613639000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1535613639000},{"_id":"themes/beantech/source/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1535613639000},{"_id":"themes/beantech/source/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1535613639000},{"_id":"themes/beantech/source/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1535613639000},{"_id":"themes/beantech/source/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1535613639000},{"_id":"themes/beantech/source/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1535613639000},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1535613639000},{"_id":"themes/beantech/source/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1535613639000},{"_id":"source/img/header_img/Iron-Man-3.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1535613639000},{"_id":"source/img/ironman-draw.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1535613639000},{"_id":"themes/beantech/source/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1535613639000},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","hash":"de51a8494180a6db074af2dee2383f0a363c5b08","modified":1535613639000},{"_id":"themes/beantech/source/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1535613639000},{"_id":"themes/beantech/source/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535613639000},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1535613639000},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1535613639000},{"_id":"themes/beantech/source/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1535613639000},{"_id":"themes/beantech/source/css/images/ironman.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1535613639000},{"_id":"themes/beantech/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1535613639000},{"_id":"source/img/header_img/tf-logo-dark.png","hash":"5c7bf8ade9de134f8c77a3c59e575abe9fc6cdd4","modified":1535613639000},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1535613639000},{"_id":"themes/beantech/source/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1535613639000},{"_id":"source/_posts/React/img/header_img/sky.jpg","hash":"29bdfb4c7d38ffe543e8631c31fe85763b1cfcbd","modified":1545962065843},{"_id":"source/_posts/first-blog/img/header_img/heye.jpg","hash":"3435cfb171e426f35a12687312169c8fefa56913","modified":1545962073025},{"_id":"source/img/beantech-desktop.png","hash":"4a8f8b209c9db8fd5209f15b8e4590525e258b0f","modified":1535613639000},{"_id":"source/img/header_img/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1535613639000},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1535613639000},{"_id":"source/img/header_img/home-bg-2-dark.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1535613639000},{"_id":"source/img/header_img/archive-bg.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1535613639000},{"_id":"source/img/header_img/main-video.mp4","hash":"d677d408a21db85c1cbcb0bdfd935f2ab611a240","modified":1544781843462},{"_id":"public/post-sitemap.xml","hash":"a74b681456505f80b6b20bc39147b2583663c286","modified":1546063314265},{"_id":"public/page-sitemap.xml","hash":"b3585b4bd817f85b6f62ca9cbf43a0fba8b6ffec","modified":1546063314326},{"_id":"public/tag-sitemap.xml","hash":"f5e982f5c2c2f566e61f272723b49e954fb7f6f7","modified":1546063314349},{"_id":"public/sitemap.xsl","hash":"4321fa69dc1b8811d32b7a1478e5603e038cea1a","modified":1546063314350},{"_id":"public/sitemap.xml","hash":"c6f2c3a5ff7c32e64af34b73199253e8af659b91","modified":1546063314351},{"_id":"public/404.html","hash":"9b1cfc18a3f6965e6475ac8beef3c08859b09f59","modified":1546063314353},{"_id":"public/tags/index.html","hash":"5447636ffc971ae7f495ac8421e088edaf7d0ba4","modified":1546063314353},{"_id":"public/2018/08/31/React/index.html","hash":"93f9d3fe63165b45e8c301b6ff75a633d8c9418f","modified":1546063314353},{"_id":"public/2018/08/30/first-blog/index.html","hash":"0ab6fe579bfbef58e5947c0e3402e8b6f12d1345","modified":1546063314353},{"_id":"public/archive/index.html","hash":"1bbc10b8eef8a553ed963b83cefedf888ffc48f8","modified":1546063314353},{"_id":"public/about/index.html","hash":"4947bf547cb70269bc1f454461cd2f5d71bcb696","modified":1546063314353},{"_id":"public/archives/index.html","hash":"3763a9de1f1710b3d05fa3cef5912cf7b1c9b23b","modified":1546063314354},{"_id":"public/archives/2018/index.html","hash":"728f518a24024973aa0d0c1ef3dbe44a829e18e0","modified":1546063314354},{"_id":"public/archives/2018/08/index.html","hash":"a8abe116240a6d1cd95208a1510d52793f691bf4","modified":1546063314354},{"_id":"public/tags/React/index.html","hash":"b0af6ad9ef27e368fd3f6e1b96d60b15502efaaf","modified":1546063314354},{"_id":"public/tags/Hexo/index.html","hash":"6976b4a8654f257916c5f7ddd2e141256a94e58a","modified":1546063314354},{"_id":"public/index.html","hash":"380be49d24b3256ede9abcbe926bec4120658197","modified":1546063314354}],"Category":[],"Data":[],"Page":[{"layout":"404","description":"你来到了没有知识的荒原 :(","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"你来到了没有知识的荒原 :(\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2018-12-13T06:09:34.636Z","updated":"2018-08-30T07:20:39.000Z","path":"404.html","title":"","comments":1,"_id":"cjq925ehc0000r3hqd61ndu3z","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"archive","title":"Archives","header-img":"img/header_img/archive-bg.png","comments":0,"date":"2017-03-20T12:49:56.000Z","description":"Hey, this is archives","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"img/header_img/archive-bg.png\"\ncomments: false\ndate: 2017-03-20 20:49:56\ndescription: \"Hey, this is archives\"\n---\n","updated":"2018-08-30T07:20:39.000Z","path":"archive/index.html","_id":"cjq925eph0002r3hqh0q3uyjv","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About","date":"2016-04-20T20:48:33.000Z","description":"Wish for the Best, Prepare for the Worst","header-img":"img/header_img/tf-logo-dark.png","comments":1,"_content":"\n> 美丽的空想抵不上踏实的做事，只要开始做事，就算再晚也不迟。\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About\"\ndate: 2016-04-21 04:48:33\ndescription: \"Wish for the Best, Prepare for the Worst\"\nheader-img: \"img/header_img/tf-logo-dark.png\"\ncomments: true\n---\n\n> 美丽的空想抵不上踏实的做事，只要开始做事，就算再晚也不迟。\n","updated":"2018-12-14T09:28:03.619Z","path":"about/index.html","_id":"cjq925epv0004r3hqozsgk7j5","content":"<blockquote>\n<p>美丽的空想抵不上踏实的做事，只要开始做事，就算再晚也不迟。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>美丽的空想抵不上踏实的做事，只要开始做事，就算再晚也不迟。</p>\n</blockquote>\n"},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"img/header_img/tag-bg.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"img/header_img/tag-bg.png\"\n---\n","date":"2018-12-13T06:09:34.622Z","updated":"2018-08-30T07:20:39.000Z","path":"tags/index.html","comments":1,"_id":"cjq925euc000cr3hqr67ri6yb","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"React中使用better-scroll","catalog":true,"date":"2018-08-31T08:04:47.000Z","subtitle":"better-scroll","header-img":"img/header_img/sky.jpg","catagories":["React"],"_content":"# React中使用better-scroll\n\n---------\n\n## 一、better-scroll滚动无效的原因\n### 1.DOM层级关系\n```\n<div class=\"wrapper\">\n  <div class=\"content\">\n    content...\n  </div>\n</div>\n```\n依照作者的说法，wrapper容器里会只对第一个子元素有效。如果多个子元素，一定要将滚动的元素放在第一个位置。\n### 2.content是否被成功添加滚动相关style\n```\n<div className={styles.wrapper}>\n    <ul className={styles.content}>\n        <li>1</li>\n        <li>2</li>\n        <li>3</li>\n    </ul>\n</div>\n```\n在审查元素中可以看到ul上已经有对应的style属性\n```\ntransition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);\ntransition-duration: 0ms;\ntransform: translate(0px, 0px) scale(1) translateZ(0px);\n```\n### 3.wrapper高度必须大于滚动元素的高度\nlet scroll = new BScroll()\nconsole.log(scroll);在控制台可以看到：\n```\nwrapperHeight:1246 (父级元素的高度)\nscrollerHeight：3849（滚动元素高度）\nhasVerticalScroll：true (是否可以滚动)\n\n```\n以上就是可以滚动的情况，wrapperHeight(1246) < scrollHeight(3849)，hasVerticalScroll为true；\n如果这些数据不对，检查是否dom没有更新完就初始化BScroll了，要等dom更新完才能初始化\n### 4.wrapper的样式\nwrapper要给上定位\n```\nposition: absolute;\nleft: 0;\ntop: 0;\noverflow: hidden;\n\n或者\nposition:relative\n```\n\n## 二、在React中使用better-scroll\n在better-scroll必须在创建完真实DOM之后才能初始化better-scroll,所以在react中需要在componentDidMount或者componentDidUpdate周期中才能初始化better-scroll.\n```\ncomponentDidMount(){\n    let timer = null;\n    if(timer){\n      clearTimeout(timer)\n    }\n    timer = setTimeout(()=>{\n      const content = document.querySelector('#wrapper');\n      let scroll = new BScroll(content,{});\n      console.log(content);\n    },0);\n    console.log(scroll,'scroll');\n}\n```\n以上只是最基本的调用使用，还要在组件销毁时把 BScroll 实例卸载\n\n## 三、封装成一个 Scroll 组件，把内容放在这个组件里\n```\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {PropTypes} from 'prop-types'\nimport styles from './index.less';\n\nclass Scroll extends React.Component{\n  constructor (props){\n    super(props);\n  }\n  static defaultProps = {\n    click: true, //页面是否可以点击,\n    tap: true,\n    refresh: false, // 刷新Scroll\n    onScroll: null, // scroll 回调事件,\n    scrollTo: null, // 滚动到固定位置\n    initScrollTop:null, //滚动到固定位置之后，回调重置scrollTop\n    pullingDown: null, // 下拉刷新 回调\n    pullingUp: null, // 上拉加载 回调函数\n    scrollToEle: null,\n  }\n  componentDidUpdate(){\n    if(this.bScroll && this.props.refresh === true){\n      this.bScroll.refresh()\n    }\n    if(this.bScroll && this.props.scrollTo === 0 && this.bScroll.y !== 0){\n      this.bScroll.scrollTo(0,this.props.scrollTo)\n      this.props.initScrollTop()\n    }\n    if(this.bScroll && this.props.scrollToEle){\n      this.bScroll.scrollToElement(this.props.scrollToEle,200)\n      this.props.initScrollTop()\n    }\n  }\n  componentDidMount(){\n    this.scrollView = ReactDOM.findDOMNode(this.refs.scrollView);\n    if(!this.bScroll){\n      console.log(this.props.pullDownRefresh,this.props.pullUpLoad);\n      this.bScroll = new BScroll(this.scrollView,{\n        probeType:3,\n        click: this.props.click ? this.iScrollClick(): false,\n        taps: this.props.tap\n      })\n      // 滑动时间\n      if(this.props.onScroll){\n        this.bScroll.on(\"scroll\", (scroll) => {\n          this.props.onScroll(scroll)\n        })\n      }\n      // 下拉刷新\n      if(this.props.pullingDown){\n        this.bScroll.on(\"touchEnd\", (pos) => {\n          if(pos.y > 200){\n            this.props.pullingDown()\n          }\n        })\n      }\n      // 上拉加载\n      if(this.props.pullingUp){\n        this.bScroll.on(\"scrollEnd\", () => {\n          if(this.bScroll.y <= (this.bScroll.maxScrollY + 50)){\n            this.props.pullingUp()\n          }\n        })\n      }\n    }\n  }\n  /**\n   * 解决ios上需要点击两次才能触发点击事件\n   *  */\n  iScrollClick(){\n    if (/iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent)) return false;\n    if (/Chrome/i.test(navigator.userAgent)) return (/Android/i.test(navigator.userAgent));\n    if (/Silk/i.test(navigator.userAgent)) return false;\n    if (/Android/i.test(navigator.userAgent)) {\n       var s=navigator.userAgent.substr(navigator.userAgent.indexOf('Android')+8,3);\n       return parseFloat(s[0]+s[3]) < 44 ? false : true\n    }\n  }\n  componentWillUnmount(){\n    this.bScroll.off('scroll');\n    this.bScroll = null;\n  }\n  // 捕获错误\n  componentDidCatch(error,info){\n    console.log(`componentDidCatch:${error}+${info}`);\n  }\n  render(){\n    return (\n      <div className={styles.scrollView} ref=\"scrollView\">\n        {this.props.children}\n      </div>\n    )\n  }\n}\nScroll.propTypes = {\n  click: PropTypes.bool,\n  refresh: PropTypes.bool,\n  pullingDown:PropTypes.func,\n  initScrollTop:PropTypes.func,\n  pullingUp:PropTypes.func,\n  onScroll: PropTypes.func\n}\nexport default Scroll;\n```\nindex.less\n```\n.scrollView{\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n}\n```\n\n### 调用组件\n```\nimport React from 'react';\nimport Scroll from 'Scroll'\nclass Content extends React.Component{\n  constructor(){\n    this.state = {\n      refresh: false\n    }\n  }\n  //数据有更新要调用refresh方法\n  componentWillReceiveProps(){\n    this.setState({\n      refresh:true\n    })\n  }\n  //实时滑动事件\n  handleScroll(e){\n    console.log(e)\n  }\n  render(){\n    return(\n      <Scroll \n      refresh={this.state.refresh}\n      onScroll={(e)=>{this.handleScroll(e)}}\n      \n      >\n        <div>\n          ....\n        </div>\n      </Scroll>\n    )\n  }\n}\n\nexport default Content;\n```\n> 在IOS端遇到的兼容性问题\n\n better-scroll 默认会阻止浏览器的原生click事件，我们需要将click属性设为true。\n 问题来了，在IOS端和浏览器模拟器中，即使我们设为false也是可以触发click事件的。如果设为true，我们在IOS端和浏览器模拟器中就需要点击两次才能触发click事件。\n 根据以上特性我们只能根据设备的和浏览器版本信息，动态设置click的值。\n \n ```\n iScrollClick(){\n    if (/iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent)) return false;\n    if (/Chrome/i.test(navigator.userAgent)) return (/Android/i.test(navigator.userAgent));\n    if (/Silk/i.test(navigator.userAgent)) return false;\n    if (/Android/i.test(navigator.userAgent)) {\n       var s=navigator.userAgent.substr(navigator.userAgent.indexOf('Android')+8,3);\n       return parseFloat(s[0]+s[3]) < 44 ? false : true\n    }\n  }\n ```\n\n> 最后\n\n我想说的是不管我们使用css的-webkit-overflow-scrolling:touch还是better-scroll（其他iScroll.js等其他第三方库），都会有想不到的问题，实际中我们还是要针对我们自己的项目来选择使用什么方式。","source":"_posts/React.md","raw":"---\ntitle: React中使用better-scroll\ncatalog: true\ndate: 2018-08-31 16:04:47\nsubtitle: 'better-scroll'\nheader-img: \"img/header_img/sky.jpg\"\ntags:\n- React\ncatagories:\n- React\n---\n# React中使用better-scroll\n\n---------\n\n## 一、better-scroll滚动无效的原因\n### 1.DOM层级关系\n```\n<div class=\"wrapper\">\n  <div class=\"content\">\n    content...\n  </div>\n</div>\n```\n依照作者的说法，wrapper容器里会只对第一个子元素有效。如果多个子元素，一定要将滚动的元素放在第一个位置。\n### 2.content是否被成功添加滚动相关style\n```\n<div className={styles.wrapper}>\n    <ul className={styles.content}>\n        <li>1</li>\n        <li>2</li>\n        <li>3</li>\n    </ul>\n</div>\n```\n在审查元素中可以看到ul上已经有对应的style属性\n```\ntransition-timing-function: cubic-bezier(0.165, 0.84, 0.44, 1);\ntransition-duration: 0ms;\ntransform: translate(0px, 0px) scale(1) translateZ(0px);\n```\n### 3.wrapper高度必须大于滚动元素的高度\nlet scroll = new BScroll()\nconsole.log(scroll);在控制台可以看到：\n```\nwrapperHeight:1246 (父级元素的高度)\nscrollerHeight：3849（滚动元素高度）\nhasVerticalScroll：true (是否可以滚动)\n\n```\n以上就是可以滚动的情况，wrapperHeight(1246) < scrollHeight(3849)，hasVerticalScroll为true；\n如果这些数据不对，检查是否dom没有更新完就初始化BScroll了，要等dom更新完才能初始化\n### 4.wrapper的样式\nwrapper要给上定位\n```\nposition: absolute;\nleft: 0;\ntop: 0;\noverflow: hidden;\n\n或者\nposition:relative\n```\n\n## 二、在React中使用better-scroll\n在better-scroll必须在创建完真实DOM之后才能初始化better-scroll,所以在react中需要在componentDidMount或者componentDidUpdate周期中才能初始化better-scroll.\n```\ncomponentDidMount(){\n    let timer = null;\n    if(timer){\n      clearTimeout(timer)\n    }\n    timer = setTimeout(()=>{\n      const content = document.querySelector('#wrapper');\n      let scroll = new BScroll(content,{});\n      console.log(content);\n    },0);\n    console.log(scroll,'scroll');\n}\n```\n以上只是最基本的调用使用，还要在组件销毁时把 BScroll 实例卸载\n\n## 三、封装成一个 Scroll 组件，把内容放在这个组件里\n```\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {PropTypes} from 'prop-types'\nimport styles from './index.less';\n\nclass Scroll extends React.Component{\n  constructor (props){\n    super(props);\n  }\n  static defaultProps = {\n    click: true, //页面是否可以点击,\n    tap: true,\n    refresh: false, // 刷新Scroll\n    onScroll: null, // scroll 回调事件,\n    scrollTo: null, // 滚动到固定位置\n    initScrollTop:null, //滚动到固定位置之后，回调重置scrollTop\n    pullingDown: null, // 下拉刷新 回调\n    pullingUp: null, // 上拉加载 回调函数\n    scrollToEle: null,\n  }\n  componentDidUpdate(){\n    if(this.bScroll && this.props.refresh === true){\n      this.bScroll.refresh()\n    }\n    if(this.bScroll && this.props.scrollTo === 0 && this.bScroll.y !== 0){\n      this.bScroll.scrollTo(0,this.props.scrollTo)\n      this.props.initScrollTop()\n    }\n    if(this.bScroll && this.props.scrollToEle){\n      this.bScroll.scrollToElement(this.props.scrollToEle,200)\n      this.props.initScrollTop()\n    }\n  }\n  componentDidMount(){\n    this.scrollView = ReactDOM.findDOMNode(this.refs.scrollView);\n    if(!this.bScroll){\n      console.log(this.props.pullDownRefresh,this.props.pullUpLoad);\n      this.bScroll = new BScroll(this.scrollView,{\n        probeType:3,\n        click: this.props.click ? this.iScrollClick(): false,\n        taps: this.props.tap\n      })\n      // 滑动时间\n      if(this.props.onScroll){\n        this.bScroll.on(\"scroll\", (scroll) => {\n          this.props.onScroll(scroll)\n        })\n      }\n      // 下拉刷新\n      if(this.props.pullingDown){\n        this.bScroll.on(\"touchEnd\", (pos) => {\n          if(pos.y > 200){\n            this.props.pullingDown()\n          }\n        })\n      }\n      // 上拉加载\n      if(this.props.pullingUp){\n        this.bScroll.on(\"scrollEnd\", () => {\n          if(this.bScroll.y <= (this.bScroll.maxScrollY + 50)){\n            this.props.pullingUp()\n          }\n        })\n      }\n    }\n  }\n  /**\n   * 解决ios上需要点击两次才能触发点击事件\n   *  */\n  iScrollClick(){\n    if (/iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent)) return false;\n    if (/Chrome/i.test(navigator.userAgent)) return (/Android/i.test(navigator.userAgent));\n    if (/Silk/i.test(navigator.userAgent)) return false;\n    if (/Android/i.test(navigator.userAgent)) {\n       var s=navigator.userAgent.substr(navigator.userAgent.indexOf('Android')+8,3);\n       return parseFloat(s[0]+s[3]) < 44 ? false : true\n    }\n  }\n  componentWillUnmount(){\n    this.bScroll.off('scroll');\n    this.bScroll = null;\n  }\n  // 捕获错误\n  componentDidCatch(error,info){\n    console.log(`componentDidCatch:${error}+${info}`);\n  }\n  render(){\n    return (\n      <div className={styles.scrollView} ref=\"scrollView\">\n        {this.props.children}\n      </div>\n    )\n  }\n}\nScroll.propTypes = {\n  click: PropTypes.bool,\n  refresh: PropTypes.bool,\n  pullingDown:PropTypes.func,\n  initScrollTop:PropTypes.func,\n  pullingUp:PropTypes.func,\n  onScroll: PropTypes.func\n}\nexport default Scroll;\n```\nindex.less\n```\n.scrollView{\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n}\n```\n\n### 调用组件\n```\nimport React from 'react';\nimport Scroll from 'Scroll'\nclass Content extends React.Component{\n  constructor(){\n    this.state = {\n      refresh: false\n    }\n  }\n  //数据有更新要调用refresh方法\n  componentWillReceiveProps(){\n    this.setState({\n      refresh:true\n    })\n  }\n  //实时滑动事件\n  handleScroll(e){\n    console.log(e)\n  }\n  render(){\n    return(\n      <Scroll \n      refresh={this.state.refresh}\n      onScroll={(e)=>{this.handleScroll(e)}}\n      \n      >\n        <div>\n          ....\n        </div>\n      </Scroll>\n    )\n  }\n}\n\nexport default Content;\n```\n> 在IOS端遇到的兼容性问题\n\n better-scroll 默认会阻止浏览器的原生click事件，我们需要将click属性设为true。\n 问题来了，在IOS端和浏览器模拟器中，即使我们设为false也是可以触发click事件的。如果设为true，我们在IOS端和浏览器模拟器中就需要点击两次才能触发click事件。\n 根据以上特性我们只能根据设备的和浏览器版本信息，动态设置click的值。\n \n ```\n iScrollClick(){\n    if (/iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent)) return false;\n    if (/Chrome/i.test(navigator.userAgent)) return (/Android/i.test(navigator.userAgent));\n    if (/Silk/i.test(navigator.userAgent)) return false;\n    if (/Android/i.test(navigator.userAgent)) {\n       var s=navigator.userAgent.substr(navigator.userAgent.indexOf('Android')+8,3);\n       return parseFloat(s[0]+s[3]) < 44 ? false : true\n    }\n  }\n ```\n\n> 最后\n\n我想说的是不管我们使用css的-webkit-overflow-scrolling:touch还是better-scroll（其他iScroll.js等其他第三方库），都会有想不到的问题，实际中我们还是要针对我们自己的项目来选择使用什么方式。","slug":"React","published":1,"updated":"2018-12-29T05:54:29.035Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq925ep30001r3hqgbdqfsgj","content":"<h1><span id=\"react中使用better-scroll\">React中使用better-scroll</span></h1>\n<hr>\n<h2><span id=\"一-better-scroll滚动无效的原因\">一、better-scroll滚动无效的原因</span></h2>\n<h3><span id=\"1dom层级关系\">1.DOM层级关系</span></h3>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span><br><span class=\"line\">    content...</span><br><span class=\"line\">  &lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>依照作者的说法，wrapper容器里会只对第一个子元素有效。如果多个子元素，一定要将滚动的元素放在第一个位置。</p>\n<h3><span id=\"2content是否被成功添加滚动相关style\">2.content是否被成功添加滚动相关style</span></h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.wrapper&#125;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.content&#125;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在审查元素中可以看到ul上已经有对应的style属性</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">transition-timing-function</span>: cubic-bezier(<span class=\"number\">0.165</span>, <span class=\"number\">0.84</span>, <span class=\"number\">0.44</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"attribute\">transition-duration</span>: <span class=\"number\">0ms</span>;</span><br><span class=\"line\"><span class=\"attribute\">transform</span>: translate(<span class=\"number\">0px</span>, <span class=\"number\">0px</span>) scale(<span class=\"number\">1</span>) translateZ(<span class=\"number\">0px</span>);</span><br></pre></td></tr></table></figure>\n<h3><span id=\"3wrapper高度必须大于滚动元素的高度\">3.wrapper高度必须大于滚动元素的高度</span></h3>\n<p>let scroll = new BScroll()<br>\nconsole.log(scroll);在控制台可以看到：</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wrapperHeight:<span class=\"number\">1246</span> <span class=\"comment\">(父级元素的高度)</span></span><br><span class=\"line\">scrollerHeight：<span class=\"number\">3849</span>（滚动元素高度）</span><br><span class=\"line\">hasVerticalScroll：true <span class=\"comment\">(是否可以滚动)</span></span><br></pre></td></tr></table></figure>\n<p>以上就是可以滚动的情况，wrapperHeight(1246) &lt; scrollHeight(3849)，hasVerticalScroll为true；<br>\n如果这些数据不对，检查是否dom没有更新完就初始化BScroll了，要等dom更新完才能初始化</p>\n<h3><span id=\"4wrapper的样式\">4.wrapper的样式</span></h3>\n<p>wrapper要给上定位</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"><span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"><span class=\"attribute\">position</span>:relative</span><br></pre></td></tr></table></figure>\n<h2><span id=\"二-在react中使用better-scroll\">二、在React中使用better-scroll</span></h2>\n<p>在better-scroll必须在创建完真实DOM之后才能初始化better-scroll,所以在react中需要在componentDidMount或者componentDidUpdate周期中才能初始化better-scroll.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">componentDidMount()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(timer)&#123;</span><br><span class=\"line\">      clearTimeout(timer)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timer = setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> content = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#wrapper'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> scroll = <span class=\"keyword\">new</span> BScroll(content,&#123;&#125;);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">    &#125;,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(scroll,<span class=\"string\">'scroll'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上只是最基本的调用使用，还要在组件销毁时把 BScroll 实例卸载</p>\n<h2><span id=\"三-封装成一个-scroll-组件把内容放在这个组件里\">三、封装成一个 Scroll 组件，把内容放在这个组件里</span></h2>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React from <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM from <span class=\"string\">'react-dom'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;PropTypes&#125; from <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> styles from <span class=\"string\">'./index.less'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Scroll</span> <span class=\"title\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> (props)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  static defaultProps = &#123;</span><br><span class=\"line\">    click: <span class=\"literal\">true</span>, <span class=\"comment\">//页面是否可以点击,</span></span><br><span class=\"line\">    tap: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    refresh: <span class=\"literal\">false</span>, <span class=\"comment\">// 刷新Scroll</span></span><br><span class=\"line\">    onScroll: <span class=\"literal\">null</span>, <span class=\"comment\">// scroll 回调事件,</span></span><br><span class=\"line\">    scrollTo: <span class=\"literal\">null</span>, <span class=\"comment\">// 滚动到固定位置</span></span><br><span class=\"line\">    initScrollTop:<span class=\"literal\">null</span>, <span class=\"comment\">//滚动到固定位置之后，回调重置scrollTop</span></span><br><span class=\"line\">    pullingDown: <span class=\"literal\">null</span>, <span class=\"comment\">// 下拉刷新 回调</span></span><br><span class=\"line\">    pullingUp: <span class=\"literal\">null</span>, <span class=\"comment\">// 上拉加载 回调函数</span></span><br><span class=\"line\">    scrollToEle: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentDidUpdate()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll &amp;&amp; <span class=\"keyword\">this</span>.props.refresh === <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll.refresh()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll &amp;&amp; <span class=\"keyword\">this</span>.props.scrollTo === <span class=\"number\">0</span> &amp;&amp; <span class=\"keyword\">this</span>.bScroll.y !== <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll.scrollTo(<span class=\"number\">0</span>,<span class=\"keyword\">this</span>.props.scrollTo)</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.initScrollTop()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll &amp;&amp; <span class=\"keyword\">this</span>.props.scrollToEle)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll.scrollToElement(<span class=\"keyword\">this</span>.props.scrollToEle,<span class=\"number\">200</span>)</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.initScrollTop()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentDidMount()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.scrollView = ReactDOM.findDOMNode(<span class=\"keyword\">this</span>.refs.scrollView);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">this</span>.bScroll)&#123;</span><br><span class=\"line\">      console.log(<span class=\"keyword\">this</span>.props.pullDownRefresh,<span class=\"keyword\">this</span>.props.pullUpLoad);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll = new BScroll(<span class=\"keyword\">this</span>.scrollView,&#123;</span><br><span class=\"line\">        probeType:<span class=\"number\">3</span>,</span><br><span class=\"line\">        click: <span class=\"keyword\">this</span>.props.click ? <span class=\"keyword\">this</span>.iScrollClick(): <span class=\"literal\">false</span>,</span><br><span class=\"line\">        taps: <span class=\"keyword\">this</span>.props.tap</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"comment\">// 滑动时间</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.props.onScroll)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bScroll.on(<span class=\"string\">\"scroll\"</span>, (scroll) =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.props.onScroll(scroll)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 下拉刷新</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.props.pullingDown)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bScroll.on(<span class=\"string\">\"touchEnd\"</span>, (pos) =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(pos.y &gt; <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.props.pullingDown()</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 上拉加载</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.props.pullingUp)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bScroll.on(<span class=\"string\">\"scrollEnd\"</span>, () =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll.y &lt;= (<span class=\"keyword\">this</span>.bScroll.maxScrollY + <span class=\"number\">50</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.props.pullingUp()</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 解决ios上需要点击两次才能触发点击事件</span></span><br><span class=\"line\"><span class=\"comment\">   *  */</span></span><br><span class=\"line\">  iScrollClick()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/Chrome/i.test(navigator.userAgent)) <span class=\"keyword\">return</span> (/Android/i.test(navigator.userAgent));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/Silk/i.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/Android/i.test(navigator.userAgent)) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> s=navigator.userAgent.substr(navigator.userAgent.indexOf(<span class=\"string\">'Android'</span>)+<span class=\"number\">8</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> parseFloat(s[<span class=\"number\">0</span>]+s[<span class=\"number\">3</span>]) &lt; <span class=\"number\">44</span> ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentWillUnmount()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bScroll.off(<span class=\"string\">'scroll'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bScroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 捕获错误</span></span><br><span class=\"line\">  componentDidCatch(error,info)&#123;</span><br><span class=\"line\">    console.log(`componentDidCatch:$&#123;error&#125;+$&#123;info&#125;`);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=&#123;styles.scrollView&#125; ref=<span class=\"string\">\"scrollView\"</span>&gt;</span><br><span class=\"line\">        &#123;<span class=\"keyword\">this</span>.props.children&#125;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Scroll.propTypes = &#123;</span><br><span class=\"line\">  click: PropTypes.bool,</span><br><span class=\"line\">  refresh: PropTypes.bool,</span><br><span class=\"line\">  pullingDown:PropTypes.func,</span><br><span class=\"line\">  initScrollTop:PropTypes.func,</span><br><span class=\"line\">  pullingUp:PropTypes.func,</span><br><span class=\"line\">  onScroll: PropTypes.func</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">export <span class=\"keyword\">default</span> Scroll;</span><br></pre></td></tr></table></figure>\n<p>index.less</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.scrollView</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3><span id=\"调用组件\">调用组件</span></h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Scroll <span class=\"keyword\">from</span> <span class=\"string\">'Scroll'</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Content</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      refresh: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//数据有更新要调用refresh方法</span></span><br><span class=\"line\">  componentWillReceiveProps()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      refresh:<span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//实时滑动事件</span></span><br><span class=\"line\">  handleScroll(e)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(e)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;Scroll </span><br><span class=\"line\">      refresh=&#123;<span class=\"keyword\">this</span>.state.refresh&#125;</span><br><span class=\"line\">      onScroll=&#123;(e)=&gt;&#123;<span class=\"keyword\">this</span>.handleScroll(e)&#125;&#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">          ....</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>Scroll&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Content;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在IOS端遇到的兼容性问题</p>\n</blockquote>\n<p>better-scroll 默认会阻止浏览器的原生click事件，我们需要将click属性设为true。<br>\n问题来了，在IOS端和浏览器模拟器中，即使我们设为false也是可以触发click事件的。如果设为true，我们在IOS端和浏览器模拟器中就需要点击两次才能触发click事件。<br>\n根据以上特性我们只能根据设备的和浏览器版本信息，动态设置click的值。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iScrollClick()&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/iPhone|iPad|iPod|Macintosh/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/Chrome/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> (<span class=\"regexp\">/Android/i</span>.test(navigator.userAgent));</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/Silk/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/Android/i</span>.test(navigator.userAgent)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> s=navigator.userAgent.substr(navigator.userAgent.indexOf(<span class=\"string\">'Android'</span>)+<span class=\"number\">8</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">parseFloat</span>(s[<span class=\"number\">0</span>]+s[<span class=\"number\">3</span>]) &lt; <span class=\"number\">44</span> ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>最后</p>\n</blockquote>\n<p>我想说的是不管我们使用css的-webkit-overflow-scrolling:touch还是better-scroll（其他iScroll.js等其他第三方库），都会有想不到的问题，实际中我们还是要针对我们自己的项目来选择使用什么方式。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1>React中使用better-scroll</h1>\n<hr>\n<h2>一、better-scroll滚动无效的原因</h2>\n<h3>1.DOM层级关系</h3>\n<figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"wrapper\"</span>&gt;</span><br><span class=\"line\">  &lt;<span class=\"keyword\">div</span> <span class=\"built_in\">class</span>=<span class=\"string\">\"content\"</span>&gt;</span><br><span class=\"line\">    content...</span><br><span class=\"line\">  &lt;/<span class=\"keyword\">div</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"keyword\">div</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>依照作者的说法，wrapper容器里会只对第一个子元素有效。如果多个子元素，一定要将滚动的元素放在第一个位置。</p>\n<h3>2.content是否被成功添加滚动相关style</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.wrapper&#125;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">ul</span> <span class=\"attr\">className</span>=<span class=\"string\">&#123;styles.content&#125;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>3<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>在审查元素中可以看到ul上已经有对应的style属性</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">transition-timing-function</span>: cubic-bezier(<span class=\"number\">0.165</span>, <span class=\"number\">0.84</span>, <span class=\"number\">0.44</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"attribute\">transition-duration</span>: <span class=\"number\">0ms</span>;</span><br><span class=\"line\"><span class=\"attribute\">transform</span>: translate(<span class=\"number\">0px</span>, <span class=\"number\">0px</span>) scale(<span class=\"number\">1</span>) translateZ(<span class=\"number\">0px</span>);</span><br></pre></td></tr></table></figure>\n<h3>3.wrapper高度必须大于滚动元素的高度</h3>\n<p>let scroll = new BScroll()<br>\nconsole.log(scroll);在控制台可以看到：</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wrapperHeight:<span class=\"number\">1246</span> <span class=\"comment\">(父级元素的高度)</span></span><br><span class=\"line\">scrollerHeight：<span class=\"number\">3849</span>（滚动元素高度）</span><br><span class=\"line\">hasVerticalScroll：true <span class=\"comment\">(是否可以滚动)</span></span><br></pre></td></tr></table></figure>\n<p>以上就是可以滚动的情况，wrapperHeight(1246) &lt; scrollHeight(3849)，hasVerticalScroll为true；<br>\n如果这些数据不对，检查是否dom没有更新完就初始化BScroll了，要等dom更新完才能初始化</p>\n<h3>4.wrapper的样式</h3>\n<p>wrapper要给上定位</p>\n<figure class=\"highlight scss\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"><span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\"><span class=\"attribute\">position</span>:relative</span><br></pre></td></tr></table></figure>\n<h2>二、在React中使用better-scroll</h2>\n<p>在better-scroll必须在创建完真实DOM之后才能初始化better-scroll,所以在react中需要在componentDidMount或者componentDidUpdate周期中才能初始化better-scroll.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">componentDidMount()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(timer)&#123;</span><br><span class=\"line\">      clearTimeout(timer)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    timer = setTimeout(<span class=\"function\"><span class=\"params\">()</span>=&gt;</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> content = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">'#wrapper'</span>);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> scroll = <span class=\"keyword\">new</span> BScroll(content,&#123;&#125;);</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">    &#125;,<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(scroll,<span class=\"string\">'scroll'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以上只是最基本的调用使用，还要在组件销毁时把 BScroll 实例卸载</p>\n<h2>三、封装成一个 Scroll 组件，把内容放在这个组件里</h2>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React from <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> ReactDOM from <span class=\"string\">'react-dom'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;PropTypes&#125; from <span class=\"string\">'prop-types'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> styles from <span class=\"string\">'./index.less'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Scroll</span> <span class=\"title\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span> (props)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(props);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  static defaultProps = &#123;</span><br><span class=\"line\">    click: <span class=\"literal\">true</span>, <span class=\"comment\">//页面是否可以点击,</span></span><br><span class=\"line\">    tap: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    refresh: <span class=\"literal\">false</span>, <span class=\"comment\">// 刷新Scroll</span></span><br><span class=\"line\">    onScroll: <span class=\"literal\">null</span>, <span class=\"comment\">// scroll 回调事件,</span></span><br><span class=\"line\">    scrollTo: <span class=\"literal\">null</span>, <span class=\"comment\">// 滚动到固定位置</span></span><br><span class=\"line\">    initScrollTop:<span class=\"literal\">null</span>, <span class=\"comment\">//滚动到固定位置之后，回调重置scrollTop</span></span><br><span class=\"line\">    pullingDown: <span class=\"literal\">null</span>, <span class=\"comment\">// 下拉刷新 回调</span></span><br><span class=\"line\">    pullingUp: <span class=\"literal\">null</span>, <span class=\"comment\">// 上拉加载 回调函数</span></span><br><span class=\"line\">    scrollToEle: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentDidUpdate()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll &amp;&amp; <span class=\"keyword\">this</span>.props.refresh === <span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll.refresh()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll &amp;&amp; <span class=\"keyword\">this</span>.props.scrollTo === <span class=\"number\">0</span> &amp;&amp; <span class=\"keyword\">this</span>.bScroll.y !== <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll.scrollTo(<span class=\"number\">0</span>,<span class=\"keyword\">this</span>.props.scrollTo)</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.initScrollTop()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll &amp;&amp; <span class=\"keyword\">this</span>.props.scrollToEle)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll.scrollToElement(<span class=\"keyword\">this</span>.props.scrollToEle,<span class=\"number\">200</span>)</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.props.initScrollTop()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentDidMount()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.scrollView = ReactDOM.findDOMNode(<span class=\"keyword\">this</span>.refs.scrollView);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">this</span>.bScroll)&#123;</span><br><span class=\"line\">      console.log(<span class=\"keyword\">this</span>.props.pullDownRefresh,<span class=\"keyword\">this</span>.props.pullUpLoad);</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.bScroll = new BScroll(<span class=\"keyword\">this</span>.scrollView,&#123;</span><br><span class=\"line\">        probeType:<span class=\"number\">3</span>,</span><br><span class=\"line\">        click: <span class=\"keyword\">this</span>.props.click ? <span class=\"keyword\">this</span>.iScrollClick(): <span class=\"literal\">false</span>,</span><br><span class=\"line\">        taps: <span class=\"keyword\">this</span>.props.tap</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">      <span class=\"comment\">// 滑动时间</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.props.onScroll)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bScroll.on(<span class=\"string\">\"scroll\"</span>, (scroll) =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">this</span>.props.onScroll(scroll)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 下拉刷新</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.props.pullingDown)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bScroll.on(<span class=\"string\">\"touchEnd\"</span>, (pos) =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(pos.y &gt; <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.props.pullingDown()</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 上拉加载</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.props.pullingUp)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bScroll.on(<span class=\"string\">\"scrollEnd\"</span>, () =&gt; &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.bScroll.y &lt;= (<span class=\"keyword\">this</span>.bScroll.maxScrollY + <span class=\"number\">50</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.props.pullingUp()</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 解决ios上需要点击两次才能触发点击事件</span></span><br><span class=\"line\"><span class=\"comment\">   *  */</span></span><br><span class=\"line\">  iScrollClick()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/iPhone|iPad|iPod|Macintosh/i.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/Chrome/i.test(navigator.userAgent)) <span class=\"keyword\">return</span> (/Android/i.test(navigator.userAgent));</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/Silk/i.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (/Android/i.test(navigator.userAgent)) &#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> s=navigator.userAgent.substr(navigator.userAgent.indexOf(<span class=\"string\">'Android'</span>)+<span class=\"number\">8</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> parseFloat(s[<span class=\"number\">0</span>]+s[<span class=\"number\">3</span>]) &lt; <span class=\"number\">44</span> ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  componentWillUnmount()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bScroll.off(<span class=\"string\">'scroll'</span>);</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.bScroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 捕获错误</span></span><br><span class=\"line\">  componentDidCatch(error,info)&#123;</span><br><span class=\"line\">    console.log(`componentDidCatch:$&#123;error&#125;+$&#123;info&#125;`);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (</span><br><span class=\"line\">      &lt;div className=&#123;styles.scrollView&#125; ref=<span class=\"string\">\"scrollView\"</span>&gt;</span><br><span class=\"line\">        &#123;<span class=\"keyword\">this</span>.props.children&#125;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">Scroll.propTypes = &#123;</span><br><span class=\"line\">  click: PropTypes.bool,</span><br><span class=\"line\">  refresh: PropTypes.bool,</span><br><span class=\"line\">  pullingDown:PropTypes.func,</span><br><span class=\"line\">  initScrollTop:PropTypes.func,</span><br><span class=\"line\">  pullingUp:PropTypes.func,</span><br><span class=\"line\">  onScroll: PropTypes.func</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">export <span class=\"keyword\">default</span> Scroll;</span><br></pre></td></tr></table></figure>\n<p>index.less</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.scrollView</span>&#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">  <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">  <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3>调用组件</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> React <span class=\"keyword\">from</span> <span class=\"string\">'react'</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> Scroll <span class=\"keyword\">from</span> <span class=\"string\">'Scroll'</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Content</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.state = &#123;</span><br><span class=\"line\">      refresh: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//数据有更新要调用refresh方法</span></span><br><span class=\"line\">  componentWillReceiveProps()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.setState(&#123;</span><br><span class=\"line\">      refresh:<span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//实时滑动事件</span></span><br><span class=\"line\">  handleScroll(e)&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(e)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>(</span><br><span class=\"line\">      &lt;Scroll </span><br><span class=\"line\">      refresh=&#123;<span class=\"keyword\">this</span>.state.refresh&#125;</span><br><span class=\"line\">      onScroll=&#123;(e)=&gt;&#123;<span class=\"keyword\">this</span>.handleScroll(e)&#125;&#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">        &lt;div&gt;</span><br><span class=\"line\">          ....</span><br><span class=\"line\">        &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/</span>Scroll&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> Content;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在IOS端遇到的兼容性问题</p>\n</blockquote>\n<p>better-scroll 默认会阻止浏览器的原生click事件，我们需要将click属性设为true。<br>\n问题来了，在IOS端和浏览器模拟器中，即使我们设为false也是可以触发click事件的。如果设为true，我们在IOS端和浏览器模拟器中就需要点击两次才能触发click事件。<br>\n根据以上特性我们只能根据设备的和浏览器版本信息，动态设置click的值。</p>\n <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iScrollClick()&#123;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/iPhone|iPad|iPod|Macintosh/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/Chrome/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> (<span class=\"regexp\">/Android/i</span>.test(navigator.userAgent));</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/Silk/i</span>.test(navigator.userAgent)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (<span class=\"regexp\">/Android/i</span>.test(navigator.userAgent)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> s=navigator.userAgent.substr(navigator.userAgent.indexOf(<span class=\"string\">'Android'</span>)+<span class=\"number\">8</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"built_in\">parseFloat</span>(s[<span class=\"number\">0</span>]+s[<span class=\"number\">3</span>]) &lt; <span class=\"number\">44</span> ? <span class=\"literal\">false</span> : <span class=\"literal\">true</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>最后</p>\n</blockquote>\n<p>我想说的是不管我们使用css的-webkit-overflow-scrolling:touch还是better-scroll（其他iScroll.js等其他第三方库），都会有想不到的问题，实际中我们还是要针对我们自己的项目来选择使用什么方式。</p>\n"},{"title":"博客简介","catalog":true,"date":"2018-08-30T08:44:31.000Z","subtitle":"关于本博客的一些记录","header-img":"img/header_img/heye.jpg","catagories":["Hexo"],"_content":"## 关于博客\n\n> 无题\n\n搭建本博客之前也前前后后用各种方式[jekyll,博客园,用vue开发]，因各种原因最终决定使用hexo框架搭建，作为自己最终的博客，希望自己可以坚持下来。\n\n> 博客搭建环境\n- 使用hexo 博客框架搭建\n- 主题来自 [YuHsuan](http://beantech.org) ,根据原主题做了一些针对个人的调整\n- 本博客部署在nginx服务器上\n- 使用 Git 管理发布到线上","source":"_posts/first-blog.md","raw":"---\ntitle: \"博客简介\"\ncatalog: true\ndate: 2018-08-30 16:44:31\nsubtitle: \"关于本博客的一些记录\"\nheader-img: \"img/header_img/heye.jpg\"\ntags:\n- Hexo\ncatagories:\n- Hexo\n---\n## 关于博客\n\n> 无题\n\n搭建本博客之前也前前后后用各种方式[jekyll,博客园,用vue开发]，因各种原因最终决定使用hexo框架搭建，作为自己最终的博客，希望自己可以坚持下来。\n\n> 博客搭建环境\n- 使用hexo 博客框架搭建\n- 主题来自 [YuHsuan](http://beantech.org) ,根据原主题做了一些针对个人的调整\n- 本博客部署在nginx服务器上\n- 使用 Git 管理发布到线上","slug":"first-blog","published":1,"updated":"2018-12-28T02:10:27.133Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjq925epm0003r3hq86wbvtlz","content":"<h2><span id=\"关于博客\">关于博客</span></h2>\n<blockquote>\n<p>无题</p>\n</blockquote>\n<p>搭建本博客之前也前前后后用各种方式[jekyll,博客园,用vue开发]，因各种原因最终决定使用hexo框架搭建，作为自己最终的博客，希望自己可以坚持下来。</p>\n<blockquote>\n<p>博客搭建环境</p>\n</blockquote>\n<ul>\n<li>使用hexo 博客框架搭建</li>\n<li>主题来自 <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> ,根据原主题做了一些针对个人的调整</li>\n<li>本博客部署在nginx服务器上</li>\n<li>使用 Git 管理发布到线上</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h2>关于博客</h2>\n<blockquote>\n<p>无题</p>\n</blockquote>\n<p>搭建本博客之前也前前后后用各种方式[jekyll,博客园,用vue开发]，因各种原因最终决定使用hexo框架搭建，作为自己最终的博客，希望自己可以坚持下来。</p>\n<blockquote>\n<p>博客搭建环境</p>\n</blockquote>\n<ul>\n<li>使用hexo 博客框架搭建</li>\n<li>主题来自 <a href=\"http://beantech.org\" target=\"_blank\" rel=\"noopener\">YuHsuan</a> ,根据原主题做了一些针对个人的调整</li>\n<li>本博客部署在nginx服务器上</li>\n<li>使用 Git 管理发布到线上</li>\n</ul>\n"}],"PostAsset":[{"_id":"source/_posts/React/img/header_img/sky.jpg","slug":"img/header_img/sky.jpg","post":"cjq925ep30001r3hqgbdqfsgj","modified":0,"renderable":0},{"_id":"source/_posts/first-blog/img/header_img/heye.jpg","slug":"img/header_img/heye.jpg","post":"cjq925epm0003r3hq86wbvtlz","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjq925ep30001r3hqgbdqfsgj","tag_id":"cjq925eq50005r3hqjmuk7bmi","_id":"cjq925er10008r3hq01r9j530"},{"post_id":"cjq925epm0003r3hq86wbvtlz","tag_id":"cjq925er00007r3hq2sldqrg0","_id":"cjq925erb000ar3hqnjl8snyz"}],"Tag":[{"name":"React","_id":"cjq925eq50005r3hqjmuk7bmi"},{"name":"Hexo","_id":"cjq925er00007r3hq2sldqrg0"}]}}